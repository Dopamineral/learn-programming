{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Programming \u00b6 Programming stuff here. Pro tip, look next to the search bar for DARK MODE The search bar actually works btw! Content \u00b6 Python (programming thing) Javascript (website stuff) SQL (underrated but powerful) Cloud (oh yeah) Data Engineering (actually my job bro) Web Design (aw yeah, cool stuff) SaaS (Software as a Service) Behind the blog (insider notes for myself) Why? \u00b6 I like to learn and like to share What is this? \u00b6 I'm not too sure what I want to do with this part of the site. On the one end it might be nice to give like tutorials on how to program, but on the other hand there's like an avalance of information out there on the internet for free. This part is forked from another account \u00b6 Will this end up on the site succesfully?","title":"Home"},{"location":"#programming","text":"Programming stuff here. Pro tip, look next to the search bar for DARK MODE The search bar actually works btw!","title":"Programming"},{"location":"#content","text":"Python (programming thing) Javascript (website stuff) SQL (underrated but powerful) Cloud (oh yeah) Data Engineering (actually my job bro) Web Design (aw yeah, cool stuff) SaaS (Software as a Service) Behind the blog (insider notes for myself)","title":"Content"},{"location":"#why","text":"I like to learn and like to share","title":"Why?"},{"location":"#what-is-this","text":"I'm not too sure what I want to do with this part of the site. On the one end it might be nice to give like tutorials on how to program, but on the other hand there's like an avalance of information out there on the internet for free.","title":"What is this?"},{"location":"#this-part-is-forked-from-another-account","text":"Will this end up on the site succesfully?","title":"This part is forked from another account"},{"location":"blogging/","text":"Behind the blog \u00b6 Hmm... \u00b6 Some thoughts here for me to make really good blogs. Could you use the \"youtube\" model to fine tune the blogs? Hook : get them in Stakes : get them interested Story focussed 100% through: keep them engaged Resolution : Satisfy so they come back Feedback to remember \u00b6 2000+ words is too long. People really like the flow, \"like an adventure\" People like the energy Headings are much better than blank text The stable diff images are pretty good Best practices \u00b6 Headings 5 min read: 1250 words @ 250 wpm Interesting resources \u00b6 Mr Beast interview - flagrant Markdown guide","title":"Behind the blog"},{"location":"blogging/#behind-the-blog","text":"","title":"Behind the blog"},{"location":"blogging/#hmm","text":"Some thoughts here for me to make really good blogs. Could you use the \"youtube\" model to fine tune the blogs? Hook : get them in Stakes : get them interested Story focussed 100% through: keep them engaged Resolution : Satisfy so they come back","title":"Hmm..."},{"location":"blogging/#feedback-to-remember","text":"2000+ words is too long. People really like the flow, \"like an adventure\" People like the energy Headings are much better than blank text The stable diff images are pretty good","title":"Feedback to remember"},{"location":"blogging/#best-practices","text":"Headings 5 min read: 1250 words @ 250 wpm","title":"Best practices"},{"location":"blogging/#interesting-resources","text":"Mr Beast interview - flagrant Markdown guide","title":"Interesting resources"},{"location":"blogging/sandbox/","text":"Playground for MKDocs markdown stuff \u00b6 Notes \u00b6 Note This is a note like this Custom title for the note And some inside text Note without a title dropdown note And the content inside dropdown expanded by default content inside Info Infobox towards the end Note content Abstract content Info content Tip content Success content What is on the inside of this box? Well the answer to all questions. Warning content Failure content Danger content Bug content Example content Quote content Tabs \u00b6 Tab 1 Tab 2 Tab 3 Tab 4 Text one Text two Note inside a tab Text three Bug You've found a bug oh well Buttons \u00b6 Subscribe to our newsletter Send Code blocks \u00b6 without a title import numpy as np np . sum ([ 1 , 1 , 2 , 3 ], 2 ) def sum ( a , b ): return a + b with a title the fancy function import numpy as np np . sum ([ 1 , 1 , 2 , 3 ], 2 ) def sum ( a , b ): return a + b Highlighting lines import numpy as np np . sum ([ 1 , 1 , 2 , 3 ], 2 ) def sum ( a , b ): return a + b some number in range ( 50 ) <- inline stuff sql stuff test? SELECT * FROM table WHERE condition = 5 C C++ Unordered list Ordered list #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Example Unordered List Ordered List * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Data Tables \u00b6 Method Description GET Fetch resource PUT Update resource DELETE Delete resource Diagrams \u00b6 graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Footnotes \u00b6 Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Formatting \u00b6 This was marked This was inserted This was deleted H 2 O A T A Ctrl + Alt + Del Lists \u00b6 Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Tooltips \u00b6 The HTML specification is maintained by the W3C . Embedding video that's hosted on youutbe \u00b6 Embedding video that's hosted on aws cloudfront \u00b6 It works, I just need to get a different video here. Copyright reasons. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"sandbox"},{"location":"blogging/sandbox/#playground-for-mkdocs-markdown-stuff","text":"","title":"Playground for MKDocs markdown stuff"},{"location":"blogging/sandbox/#notes","text":"Note This is a note like this Custom title for the note And some inside text Note without a title dropdown note And the content inside dropdown expanded by default content inside Info Infobox towards the end Note content Abstract content Info content Tip content Success content What is on the inside of this box? Well the answer to all questions. Warning content Failure content Danger content Bug content Example content Quote content","title":"Notes"},{"location":"blogging/sandbox/#tabs","text":"Tab 1 Tab 2 Tab 3 Tab 4 Text one Text two Note inside a tab Text three Bug You've found a bug oh well","title":"Tabs"},{"location":"blogging/sandbox/#buttons","text":"Subscribe to our newsletter Send","title":"Buttons"},{"location":"blogging/sandbox/#code-blocks","text":"without a title import numpy as np np . sum ([ 1 , 1 , 2 , 3 ], 2 ) def sum ( a , b ): return a + b with a title the fancy function import numpy as np np . sum ([ 1 , 1 , 2 , 3 ], 2 ) def sum ( a , b ): return a + b Highlighting lines import numpy as np np . sum ([ 1 , 1 , 2 , 3 ], 2 ) def sum ( a , b ): return a + b some number in range ( 50 ) <- inline stuff sql stuff test? SELECT * FROM table WHERE condition = 5 C C++ Unordered list Ordered list #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Example Unordered List Ordered List * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci","title":"Code blocks"},{"location":"blogging/sandbox/#data-tables","text":"Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Data Tables"},{"location":"blogging/sandbox/#diagrams","text":"graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses","title":"Diagrams"},{"location":"blogging/sandbox/#footnotes","text":"Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Footnotes"},{"location":"blogging/sandbox/#formatting","text":"This was marked This was inserted This was deleted H 2 O A T A Ctrl + Alt + Del","title":"Formatting"},{"location":"blogging/sandbox/#lists","text":"Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Lists"},{"location":"blogging/sandbox/#tooltips","text":"The HTML specification is maintained by the W3C .","title":"Tooltips"},{"location":"blogging/sandbox/#embedding-video-thats-hosted-on-youutbe","text":"","title":"Embedding video that's hosted on youutbe"},{"location":"blogging/sandbox/#embedding-video-thats-hosted-on-aws-cloudfront","text":"It works, I just need to get a different video here. Copyright reasons. Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Embedding video that's hosted on aws cloudfront"},{"location":"data_engineering/","text":"Data Engineering \u00b6 Book Recommendations \u00b6 Fundamentals of Data Engineering","title":"Data Engineering"},{"location":"data_engineering/#data-engineering","text":"","title":"Data Engineering"},{"location":"data_engineering/#book-recommendations","text":"Fundamentals of Data Engineering","title":"Book Recommendations"},{"location":"data_engineering/aws_cp_questions/","text":"Cloud Practitioner Questions \u00b6 Examtopics AWS CP questions Whizlabs AWS CP questions Digital Cloud CP questions SaaS Guru CP questions Skillcurb Youtube Channel with AWS CP questions Certlibrary AWS CP questions","title":"AWS CP Questions"},{"location":"data_engineering/aws_cp_questions/#cloud-practitioner-questions","text":"Examtopics AWS CP questions Whizlabs AWS CP questions Digital Cloud CP questions SaaS Guru CP questions Skillcurb Youtube Channel with AWS CP questions Certlibrary AWS CP questions","title":"Cloud Practitioner Questions"},{"location":"data_engineering/aws_cp_theory/","text":"Cloud Practitioner Theory \u00b6 Outline here follows the AWS cloud practitioner study guide. Domain 1: Cloud Concepts \u00b6 1.1 Define the AWS Cloud and its value proposition \u00b6 Define the benefits of the AWS cloud including: \u00b6 Security Reliability High Availability Elasticity Agility Pay-as-you go pricing Scalability Global Reach Economy of scale Explain how the AWS cloud allows users to focus on business value \u00b6 Shifting technical resources to revenue-generating activities as opposed to managing infrastructure 1.2 Identify aspects of AWS Cloud economics \u00b6 Define items that would be part of a Total Cost of Ownership proposal \u00b6 Understand the1 role of operational expenses (OpEx) Understand the role of capital expenses (CapEx) Understand labor costs associated with on-premises operations Understand the impact of software licensing costs when moving to the cloud Identify which operations will reduce costs by moving to the cloud \u00b6 Right-sized infrastructure Benefits of automation Reduce compliance scope (for example, reporting) Managed services (for example, RDS, ECS, EKS, DynamoDB) 1.3 Explain the different cloud architecture design principles \u00b6 Explain the design principles \u00b6 Design for failure Decouple components versus monolithic architecture Implement elasticity in the cloud versus on-premises Think parallel Domain 2: Security and Compliance \u00b6 2.1 Define the AWS shared responsibility model \u00b6 Recognize the elements of the Shared Responsibility Model \u00b6 Describe the customer\u2019s responsibly on AWS \u00b6 Describe how the customer\u2019s responsibilities may shift depending on the service used (for example with RDS, Lambda, or EC2) Describe AWS responsibilities \u00b6 2.2 Define AWS Cloud security and compliance concepts \u00b6 Identify where to find AWS compliance information \u00b6 Locations of lists of recognized available compliance controls (for example, HIPPA, SOCs) Recognize that compliance requirements vary among AWS services At a high level, describe how customers achieve compliance on AWS \u00b6 Identify different encryption options on AWS (for example, In transit, At rest) Describe who enables encryption on AWS for a given service \u00b6 Recognize there are services that will aid in auditing and reporting \u00b6 Recognize that logs exist for auditing and monitoring (do not have to understand the logs) Define Amazon CloudWatch, AWS Config, and AWS CloudTrail Explain the concept of least privileged access \u00b6 2.3 Identify AWS access management capabilities \u00b6 Understand the purpose of User and Identity Management \u00b6 Access keys and password policies (rotation, complexity) Multi-Factor Authentication (MFA) AWS Identity and Access Management (IAM) Groups/users Roles Policies, managed policies compared to custom policies Tasks that require use of root accounts Protection of root accounts 2.4 Identify resources for security support \u00b6 Recognize there are different network security capabilities \u00b6 Native AWS services (for example, security groups, Network ACLs, AWS WAF) 3 rd party security products from the AWS Marketplace Recognize there is documentation and where to find it (for example, best practices,whitepapers, official documents) \u00b6 AWS Knowledge Center, Security Center, security forum, and security blogs Partner Systems Integrators Know that security checks are a component of AWS Trusted Advisor \u00b6 Domain 3: Technology \u00b6 3.1 Define methods of deploying and operating in the AWS Cloud \u00b6 Identify at a high level different ways of provisioning and operating in the AWS cloud \u00b6 Programmatic access, APIs, SDKs, AWS Management Console, CLI, Infrastructure as Code Identify different types of cloud deployment models \u00b6 All in with cloud/cloud native Hybrid On-premises Identify connectivity options \u00b6 VPN AWS Direct Connect Public internet 3.2 Define the AWS global infrastructure \u00b6 Describe the relationships among Regions, Availability Zones, and Edge Locations \u00b6 Describe how to achieve high availability through the use of multiple Availability Zones \u00b6 Recall that high availability is achieved by using multiple Availability Zones Recognize that Availability Zones do not share single points of failure Describe when to consider the use of multiple AWS Regions \u00b6 Disaster recovery/business continuity Low latency for end-users Data sovereignty Describe at a high level the benefits of Edge Locations \u00b6 Amazon CloudFront AWS Global Accelerator 3.3 Identify the core AWS services \u00b6 Describe the categories of services on AWS (compute, storage, network, database) \u00b6 Identify AWS compute services \u00b6 Recognize there are different compute families Recognize the different services that provide compute (for example, AWS Lambda compared to Amazon Elastic Container Service (Amazon ECS), or Amazon EC2, etc.) Recognize that elasticity is achieved through Auto Scaling Identify the purpose of load balancers Identify different AWS storage services \u00b6 Describe Amazon S3 Describe Amazon Elastic Block Store (Amazon EBS) Describe Amazon S3 Glacier Describe AWS Snowball Describe Amazon Elastic File System (Amazon EFS) Describe AWS Storage Gateway Identify AWS networking services \u00b6 Identify VPC Identify security groups Identify the purpose of Amazon Route 53 Identify VPN, AWS Direct Connect Identify different AWS database services \u00b6 o Install databases on Amazon EC2 compared to AWS managed databases o Identify Amazon RDS o Identify Amazon DynamoDB o Identify Amazon Redshift 3.4 Identify resources for technology support \u00b6 Recognize there is documentation (best practices, whitepapers, AWS Knowledge Center, forums, blogs) \u00b6 Identify the various levels and scope of AWS support \u00b6 AWS Abuse AWS support cases Premium support Technical Account Managers Recognize there is a partner network (marketplace, third-party) including Independent Software Vendors and System Integrators \u00b6 Identify sources of AWS technical assistance and knowledge including professional services,solution architects, training and certification, and the Amazon Partner Network \u00b6 Identify the benefits of using AWS Trusted Advisor \u00b6 Domain 4: Billing and Pricing \u00b6 4.1 Compare and contrast the various pricing models for AWS (for example, On-Demand Instances,Reserved Instances, and Spot Instance pricing) \u00b6 Identify scenarios/best fit for On-Demand Instance pricing \u00b6 Identify scenarios/best fit for Reserved-Instance pricing \u00b6 Describe Reserved-Instances flexibility Describe Reserved-Instances behavior in AWS Organizations Identify scenarios/best fit for Spot Instance pricing \u00b6 4.2 Recognize the various account structures in relation to AWS billing and pricing \u00b6 Recognize that consolidated billing is a feature of AWS Organizations \u00b6 Identify how multiple accounts aid in allocating costs across departments \u00b6 4.3 Identify resources available for billing support \u00b6 Identify ways to get billing support and information \u00b6 Cost Explorer, AWS Cost and Usage Report, Amazon QuickSight, third-party partners, and AWS Marketplace tools Open a billing support case The role of the Concierge for AWS Enterprise Support Plan customers Identify where to find pricing information on AWS services \u00b6 AWS Simple Monthly Calculator AWS Services product pages AWS Pricing API Recognize that alarms/alerts exist \u00b6 Identify how tags are used in cost allocation \u00b6 Appendix \u00b6 Which key tools, technologies, and concepts might be covered on the exam? The following is a non-exhaustive list of the tools and technologies that could appear on the exam. This list is subject to change and is provided to help you understand the general scope of services, features, or technologies on the exam. The general tools and technologies in this list appear in no particular order. AWS services are grouped according to their primary functions. While some of these technologies will likely be covered more than others on the exam, the order and placement of them in this list are no indication of relative weight or importance: APIs Cost Explorer AWS Cost and Usage Report AWS Command Line Interface (CLI) Elastic Load Balancers Amazon EC2 instance types (for example, Reserved, On-Demand, Spot) AWS global infrastructure (for example, AWS Regions, Availability Zones) Infrastructure as Code (IaC) Amazon Machine Images (AMIs) AWS Management Console AWS Marketplace AWS Professional Services AWS Personal Health Dashboard Security groups AWS Service Catalog AWS Service Health Dashboard Service quotas AWS software development kits (SDKs) AWS Support Center AWS Support tiers Virtual private networks (VPNs) AWS services and features \u00b6 Analytics: Amazon Athena Amazon Kinesis Amazon QuickSight Application Integration: Amazon Simple Notification Service (Amazon SNS) Amazon Simple Queue Service (Amazon SQS) Compute and Serverless: AWS Batch Amazon EC2 AWS Elastic Beanstalk AWS Lambda Amazon Lightsail Amazon WorkSpaces Containers: Amazon Elastic Container Service (Amazon ECS) Amazon Elastic Kubernetes Service (Amazon EKS) AWS Fargate Database: Amazon Aurora Amazon DynamoDB Amazon ElastiCache Amazon RDS Amazon Redshift Developer Tools: AWS CodeBuild AWS CodeCommit AWS CodeDeploy AWS CodePipeline AWS CodeStar Customer Engagement: Amazon Connect Management, Monitoring, and Governance: AWS Auto Scaling AWS Budgets AWS CloudFormation AWS CloudTrail Amazon CloudWatch AWS Config AWS Cost and Usage Report Amazon EventBridge (Amazon CloudWatch Events) AWS License Manager AWS Managed Services AWS Organizations AWS Secrets Manager AWS Systems Manager AWS Systems Manager Parameter Store AWS Trusted Advisor Networking and Content Delivery: Amazon API Gateway Amazon CloudFront AWS Direct Connect Amazon Route 53 Amazon VPC Security, Identity, and Compliance: AWS Artifact AWS Certificate Manager (ACM) AWS CloudHSM Amazon Cognito Amazon Detective Amazon GuardDuty AWS Identity and Access Management (IAM) Amazon Inspector AWS License Manager Amazon Macie AWS Shield AWS WAF Storage: AWS Backup Amazon Elastic Block Store (Amazon EBS) Amazon Elastic File System (Amazon EFS) Amazon S3 Amazon S3 Glacier AWS Snowball Edge AWS Storage Gateway","title":"AWS CP Theory"},{"location":"data_engineering/aws_cp_theory/#cloud-practitioner-theory","text":"Outline here follows the AWS cloud practitioner study guide.","title":"Cloud Practitioner Theory"},{"location":"data_engineering/aws_cp_theory/#domain-1-cloud-concepts","text":"","title":"Domain 1: Cloud Concepts"},{"location":"data_engineering/aws_cp_theory/#11-define-the-aws-cloud-and-its-value-proposition","text":"","title":"1.1 Define the AWS Cloud and its value proposition"},{"location":"data_engineering/aws_cp_theory/#define-the-benefits-of-the-aws-cloud-including","text":"Security Reliability High Availability Elasticity Agility Pay-as-you go pricing Scalability Global Reach Economy of scale","title":"Define the benefits of the AWS cloud including:"},{"location":"data_engineering/aws_cp_theory/#explain-how-the-aws-cloud-allows-users-to-focus-on-business-value","text":"Shifting technical resources to revenue-generating activities as opposed to managing infrastructure","title":"Explain how the AWS cloud allows users to focus on business value"},{"location":"data_engineering/aws_cp_theory/#12-identify-aspects-of-aws-cloud-economics","text":"","title":"1.2 Identify aspects of AWS Cloud economics"},{"location":"data_engineering/aws_cp_theory/#define-items-that-would-be-part-of-a-total-cost-of-ownership-proposal","text":"Understand the1 role of operational expenses (OpEx) Understand the role of capital expenses (CapEx) Understand labor costs associated with on-premises operations Understand the impact of software licensing costs when moving to the cloud","title":"Define items that would be part of a Total Cost of Ownership proposal"},{"location":"data_engineering/aws_cp_theory/#identify-which-operations-will-reduce-costs-by-moving-to-the-cloud","text":"Right-sized infrastructure Benefits of automation Reduce compliance scope (for example, reporting) Managed services (for example, RDS, ECS, EKS, DynamoDB)","title":"Identify which operations will reduce costs by moving to the cloud"},{"location":"data_engineering/aws_cp_theory/#13-explain-the-different-cloud-architecture-design-principles","text":"","title":"1.3 Explain the different cloud architecture design principles"},{"location":"data_engineering/aws_cp_theory/#explain-the-design-principles","text":"Design for failure Decouple components versus monolithic architecture Implement elasticity in the cloud versus on-premises Think parallel","title":"Explain the design principles"},{"location":"data_engineering/aws_cp_theory/#domain-2-security-and-compliance","text":"","title":"Domain 2: Security and Compliance"},{"location":"data_engineering/aws_cp_theory/#21-define-the-aws-shared-responsibility-model","text":"","title":"2.1 Define the AWS shared responsibility model"},{"location":"data_engineering/aws_cp_theory/#recognize-the-elements-of-the-shared-responsibility-model","text":"","title":"Recognize the elements of the Shared Responsibility Model"},{"location":"data_engineering/aws_cp_theory/#describe-the-customers-responsibly-on-aws","text":"Describe how the customer\u2019s responsibilities may shift depending on the service used (for example with RDS, Lambda, or EC2)","title":"Describe the customer\u2019s responsibly on AWS"},{"location":"data_engineering/aws_cp_theory/#describe-aws-responsibilities","text":"","title":"Describe AWS responsibilities"},{"location":"data_engineering/aws_cp_theory/#22-define-aws-cloud-security-and-compliance-concepts","text":"","title":"2.2 Define AWS Cloud security and compliance concepts"},{"location":"data_engineering/aws_cp_theory/#identify-where-to-find-aws-compliance-information","text":"Locations of lists of recognized available compliance controls (for example, HIPPA, SOCs) Recognize that compliance requirements vary among AWS services","title":"Identify where to find AWS compliance information"},{"location":"data_engineering/aws_cp_theory/#at-a-high-level-describe-how-customers-achieve-compliance-on-aws","text":"Identify different encryption options on AWS (for example, In transit, At rest)","title":"At a high level, describe how customers achieve compliance on AWS"},{"location":"data_engineering/aws_cp_theory/#describe-who-enables-encryption-on-aws-for-a-given-service","text":"","title":"Describe who enables encryption on AWS for a given service"},{"location":"data_engineering/aws_cp_theory/#recognize-there-are-services-that-will-aid-in-auditing-and-reporting","text":"Recognize that logs exist for auditing and monitoring (do not have to understand the logs) Define Amazon CloudWatch, AWS Config, and AWS CloudTrail","title":"Recognize there are services that will aid in auditing and reporting"},{"location":"data_engineering/aws_cp_theory/#explain-the-concept-of-least-privileged-access","text":"","title":"Explain the concept of least privileged access"},{"location":"data_engineering/aws_cp_theory/#23-identify-aws-access-management-capabilities","text":"","title":"2.3 Identify AWS access management capabilities"},{"location":"data_engineering/aws_cp_theory/#understand-the-purpose-of-user-and-identity-management","text":"Access keys and password policies (rotation, complexity) Multi-Factor Authentication (MFA) AWS Identity and Access Management (IAM) Groups/users Roles Policies, managed policies compared to custom policies Tasks that require use of root accounts Protection of root accounts","title":"Understand the purpose of User and Identity Management"},{"location":"data_engineering/aws_cp_theory/#24-identify-resources-for-security-support","text":"","title":"2.4 Identify resources for security support"},{"location":"data_engineering/aws_cp_theory/#recognize-there-are-different-network-security-capabilities","text":"Native AWS services (for example, security groups, Network ACLs, AWS WAF) 3 rd party security products from the AWS Marketplace","title":"Recognize there are different network security capabilities"},{"location":"data_engineering/aws_cp_theory/#recognize-there-is-documentation-and-where-to-find-it-for-example-best-practiceswhitepapers-official-documents","text":"AWS Knowledge Center, Security Center, security forum, and security blogs Partner Systems Integrators","title":"Recognize there is documentation and where to find it (for example, best practices,whitepapers, official documents)"},{"location":"data_engineering/aws_cp_theory/#know-that-security-checks-are-a-component-of-aws-trusted-advisor","text":"","title":"Know that security checks are a component of AWS Trusted Advisor"},{"location":"data_engineering/aws_cp_theory/#domain-3-technology","text":"","title":"Domain 3: Technology"},{"location":"data_engineering/aws_cp_theory/#31-define-methods-of-deploying-and-operating-in-the-aws-cloud","text":"","title":"3.1 Define methods of deploying and operating in the AWS Cloud"},{"location":"data_engineering/aws_cp_theory/#identify-at-a-high-level-different-ways-of-provisioning-and-operating-in-the-aws-cloud","text":"Programmatic access, APIs, SDKs, AWS Management Console, CLI, Infrastructure as Code","title":"Identify at a high level different ways of provisioning and operating in the AWS cloud"},{"location":"data_engineering/aws_cp_theory/#identify-different-types-of-cloud-deployment-models","text":"All in with cloud/cloud native Hybrid On-premises","title":"Identify different types of cloud deployment models"},{"location":"data_engineering/aws_cp_theory/#identify-connectivity-options","text":"VPN AWS Direct Connect Public internet","title":"Identify connectivity options"},{"location":"data_engineering/aws_cp_theory/#32-define-the-aws-global-infrastructure","text":"","title":"3.2 Define the AWS global infrastructure"},{"location":"data_engineering/aws_cp_theory/#describe-the-relationships-among-regions-availability-zones-and-edge-locations","text":"","title":"Describe the relationships among Regions, Availability Zones, and Edge Locations"},{"location":"data_engineering/aws_cp_theory/#describe-how-to-achieve-high-availability-through-the-use-of-multiple-availability-zones","text":"Recall that high availability is achieved by using multiple Availability Zones Recognize that Availability Zones do not share single points of failure","title":"Describe how to achieve high availability through the use of multiple Availability Zones"},{"location":"data_engineering/aws_cp_theory/#describe-when-to-consider-the-use-of-multiple-aws-regions","text":"Disaster recovery/business continuity Low latency for end-users Data sovereignty","title":"Describe when to consider the use of multiple AWS Regions"},{"location":"data_engineering/aws_cp_theory/#describe-at-a-high-level-the-benefits-of-edge-locations","text":"Amazon CloudFront AWS Global Accelerator","title":"Describe at a high level the benefits of Edge Locations"},{"location":"data_engineering/aws_cp_theory/#33-identify-the-core-aws-services","text":"","title":"3.3 Identify the core AWS services"},{"location":"data_engineering/aws_cp_theory/#describe-the-categories-of-services-on-aws-compute-storage-network-database","text":"","title":"Describe the categories of services on AWS (compute, storage, network, database)"},{"location":"data_engineering/aws_cp_theory/#identify-aws-compute-services","text":"Recognize there are different compute families Recognize the different services that provide compute (for example, AWS Lambda compared to Amazon Elastic Container Service (Amazon ECS), or Amazon EC2, etc.) Recognize that elasticity is achieved through Auto Scaling Identify the purpose of load balancers","title":"Identify AWS compute services"},{"location":"data_engineering/aws_cp_theory/#identify-different-aws-storage-services","text":"Describe Amazon S3 Describe Amazon Elastic Block Store (Amazon EBS) Describe Amazon S3 Glacier Describe AWS Snowball Describe Amazon Elastic File System (Amazon EFS) Describe AWS Storage Gateway","title":"Identify different AWS storage services"},{"location":"data_engineering/aws_cp_theory/#identify-aws-networking-services","text":"Identify VPC Identify security groups Identify the purpose of Amazon Route 53 Identify VPN, AWS Direct Connect","title":"Identify AWS networking services"},{"location":"data_engineering/aws_cp_theory/#identify-different-aws-database-services","text":"o Install databases on Amazon EC2 compared to AWS managed databases o Identify Amazon RDS o Identify Amazon DynamoDB o Identify Amazon Redshift","title":"Identify different AWS database services"},{"location":"data_engineering/aws_cp_theory/#34-identify-resources-for-technology-support","text":"","title":"3.4 Identify resources for technology support"},{"location":"data_engineering/aws_cp_theory/#recognize-there-is-documentation-best-practices-whitepapers-aws-knowledge-center-forums-blogs","text":"","title":"Recognize there is documentation (best practices, whitepapers, AWS Knowledge Center, forums, blogs)"},{"location":"data_engineering/aws_cp_theory/#identify-the-various-levels-and-scope-of-aws-support","text":"AWS Abuse AWS support cases Premium support Technical Account Managers","title":"Identify the various levels and scope of AWS support"},{"location":"data_engineering/aws_cp_theory/#recognize-there-is-a-partner-network-marketplace-third-party-including-independent-software-vendors-and-system-integrators","text":"","title":"Recognize there is a partner network (marketplace, third-party) including Independent Software Vendors and System Integrators"},{"location":"data_engineering/aws_cp_theory/#identify-sources-of-aws-technical-assistance-and-knowledge-including-professional-servicessolution-architects-training-and-certification-and-the-amazon-partner-network","text":"","title":"Identify sources of AWS technical assistance and knowledge including professional services,solution architects, training and certification, and the Amazon Partner Network"},{"location":"data_engineering/aws_cp_theory/#identify-the-benefits-of-using-aws-trusted-advisor","text":"","title":"Identify the benefits of using AWS Trusted Advisor"},{"location":"data_engineering/aws_cp_theory/#domain-4-billing-and-pricing","text":"","title":"Domain 4: Billing and Pricing"},{"location":"data_engineering/aws_cp_theory/#41-compare-and-contrast-the-various-pricing-models-for-aws-for-example-on-demand-instancesreserved-instances-and-spot-instance-pricing","text":"","title":"4.1 Compare and contrast the various pricing models for AWS (for example, On-Demand Instances,Reserved Instances, and Spot Instance pricing)"},{"location":"data_engineering/aws_cp_theory/#identify-scenariosbest-fit-for-on-demand-instance-pricing","text":"","title":"Identify scenarios/best fit for On-Demand Instance pricing"},{"location":"data_engineering/aws_cp_theory/#identify-scenariosbest-fit-for-reserved-instance-pricing","text":"Describe Reserved-Instances flexibility Describe Reserved-Instances behavior in AWS Organizations","title":"Identify scenarios/best fit for Reserved-Instance pricing"},{"location":"data_engineering/aws_cp_theory/#identify-scenariosbest-fit-for-spot-instance-pricing","text":"","title":"Identify scenarios/best fit for Spot Instance pricing"},{"location":"data_engineering/aws_cp_theory/#42-recognize-the-various-account-structures-in-relation-to-aws-billing-and-pricing","text":"","title":"4.2 Recognize the various account structures in relation to AWS billing and pricing"},{"location":"data_engineering/aws_cp_theory/#recognize-that-consolidated-billing-is-a-feature-of-aws-organizations","text":"","title":"Recognize that consolidated billing is a feature of AWS Organizations"},{"location":"data_engineering/aws_cp_theory/#identify-how-multiple-accounts-aid-in-allocating-costs-across-departments","text":"","title":"Identify how multiple accounts aid in allocating costs across departments"},{"location":"data_engineering/aws_cp_theory/#43-identify-resources-available-for-billing-support","text":"","title":"4.3 Identify resources available for billing support"},{"location":"data_engineering/aws_cp_theory/#identify-ways-to-get-billing-support-and-information","text":"Cost Explorer, AWS Cost and Usage Report, Amazon QuickSight, third-party partners, and AWS Marketplace tools Open a billing support case The role of the Concierge for AWS Enterprise Support Plan customers","title":"Identify ways to get billing support and information"},{"location":"data_engineering/aws_cp_theory/#identify-where-to-find-pricing-information-on-aws-services","text":"AWS Simple Monthly Calculator AWS Services product pages AWS Pricing API","title":"Identify where to find pricing information on AWS services"},{"location":"data_engineering/aws_cp_theory/#recognize-that-alarmsalerts-exist","text":"","title":"Recognize that alarms/alerts exist"},{"location":"data_engineering/aws_cp_theory/#identify-how-tags-are-used-in-cost-allocation","text":"","title":"Identify how tags are used in cost allocation"},{"location":"data_engineering/aws_cp_theory/#appendix","text":"Which key tools, technologies, and concepts might be covered on the exam? The following is a non-exhaustive list of the tools and technologies that could appear on the exam. This list is subject to change and is provided to help you understand the general scope of services, features, or technologies on the exam. The general tools and technologies in this list appear in no particular order. AWS services are grouped according to their primary functions. While some of these technologies will likely be covered more than others on the exam, the order and placement of them in this list are no indication of relative weight or importance: APIs Cost Explorer AWS Cost and Usage Report AWS Command Line Interface (CLI) Elastic Load Balancers Amazon EC2 instance types (for example, Reserved, On-Demand, Spot) AWS global infrastructure (for example, AWS Regions, Availability Zones) Infrastructure as Code (IaC) Amazon Machine Images (AMIs) AWS Management Console AWS Marketplace AWS Professional Services AWS Personal Health Dashboard Security groups AWS Service Catalog AWS Service Health Dashboard Service quotas AWS software development kits (SDKs) AWS Support Center AWS Support tiers Virtual private networks (VPNs)","title":"Appendix"},{"location":"data_engineering/aws_cp_theory/#aws-services-and-features","text":"Analytics: Amazon Athena Amazon Kinesis Amazon QuickSight Application Integration: Amazon Simple Notification Service (Amazon SNS) Amazon Simple Queue Service (Amazon SQS) Compute and Serverless: AWS Batch Amazon EC2 AWS Elastic Beanstalk AWS Lambda Amazon Lightsail Amazon WorkSpaces Containers: Amazon Elastic Container Service (Amazon ECS) Amazon Elastic Kubernetes Service (Amazon EKS) AWS Fargate Database: Amazon Aurora Amazon DynamoDB Amazon ElastiCache Amazon RDS Amazon Redshift Developer Tools: AWS CodeBuild AWS CodeCommit AWS CodeDeploy AWS CodePipeline AWS CodeStar Customer Engagement: Amazon Connect Management, Monitoring, and Governance: AWS Auto Scaling AWS Budgets AWS CloudFormation AWS CloudTrail Amazon CloudWatch AWS Config AWS Cost and Usage Report Amazon EventBridge (Amazon CloudWatch Events) AWS License Manager AWS Managed Services AWS Organizations AWS Secrets Manager AWS Systems Manager AWS Systems Manager Parameter Store AWS Trusted Advisor Networking and Content Delivery: Amazon API Gateway Amazon CloudFront AWS Direct Connect Amazon Route 53 Amazon VPC Security, Identity, and Compliance: AWS Artifact AWS Certificate Manager (ACM) AWS CloudHSM Amazon Cognito Amazon Detective Amazon GuardDuty AWS Identity and Access Management (IAM) Amazon Inspector AWS License Manager Amazon Macie AWS Shield AWS WAF Storage: AWS Backup Amazon Elastic Block Store (Amazon EBS) Amazon Elastic File System (Amazon EFS) Amazon S3 Amazon S3 Glacier AWS Snowball Edge AWS Storage Gateway","title":"AWS services and features"},{"location":"data_engineering/install_dbt/","text":"Install DBT locally \u00b6 Installing DBT locally succesfully isn't that aweful if you understand why it can be so absolutely aweful. At the end of the day it's just a python thing so we will treat it as such and install it as the simple python thing that it is! You need just a few steps to do it succesfully: Install the correct version of python (the version that dbt will work with) Make a virtual environment (whatever that means) Install DBT like you would any other python thing (however you're supposed to do that). Short overview (if you know what you're doing) \u00b6 install pytnon3.10 python3.10 -m venv .venv source .venv/bin/activate pip install dbt-snowflake link it to your snowflake account according to the dbt prompt Step1: Install the correct python version. \u00b6 It turns out DBT will not work if you use anything other than python3.10 so we'll need to install that first. This is how you do it on mac. Fun fact The B in DBT actually means \"bomb\". If you try to install dbt without taking proper precautions, it will quite litereally explode. One thing you can do is in your terminal to see your current python version is type the following: python3 --version output: >> Python 3.11.0 !!! As you can see above, my current python version is very cool but will cause dbt to explode, no bueno. So we need to install another python version. Get python 3.10.7 from the official python site Navigate to downloads>MacOS Scroll down to the bottom of the screen and find \"python3.10.7\" Or go straight to the python 3.10.7 page Then scroll down to the \"Files\" table and find \"macOS 64-bit universal2 installer\" Download it and launch it. Install python3.10.7 Go to your download folders where you downloaded the python-3.10.7-macos11.pkg file. Double click the thing A screen will pop open where you can click continue a couple of times. Click continue a couple of times until the installation is complete. When it's done a folder might pop up with all of the things you just installed, you can close this. Or not, do whatever you like. Confirm that python 3.10.7 is installed Open a new terminal Let me repeat, open a new terminal, because your old terminal might not see the newly installed things yet. type python3 --version output: >> Python 3.11.0 !!! THE WRONG ONE, WHY!!!?? -- don't worry everything will be ok. Ok if it still shows the wrong python version, don't worry that's completely normal. If it does show the correct version of python then well congratulations. To check that python3.10.7 really really is installed you can specify which python to use to do things. Instead of writing python3, you can also write python3.10. Try that now: python3.10 --version output: Python 3.10.7 -- Succes! Warning If the above didn't work for some reason try to retrace your steps and reinstall python 3.10.7. If it still doesn't work. Contact me, Robert or someone else to help because oh boy you will need it With the correct version of python installed you're now ready for the next step. Step 2: Create a virtual environment \u00b6 What is a virtual environment even? Whenever you install stuff in python the files are put in \"the environment\". This is just a folder where whatever packages are stored when you install them with pip install numpy for example. When you then write something like import numpy in your python scripts it will know where to look in \"the environment\" for the package that it needs. Now in real life sometimes code can get a bit complicated and package version \"so and so\" will start to break when you try to use it with the newest version \"this one cool package\". Or sometimes you might want to make an app with only a handfull of all of te thousands of packages that you've been installing in your \"environment\". That's where \"virtual environments\" come in. You create an entirely new space in your computer, you step into it and whenever you pip install <some package> it will be installed in an entirely new and entirely fresh \"environment\". And as a bonus, it's really easy to recreate virtual environements with all the necessary packages so they just work, no matter what machine they are on. But that's not needed for today. Now remember that DBT is a bomb? Bombs are especially good to put inside virtual environments. This way when they explode you only have to worry about the few things that are going on inside this isolated \"virtual environment\" that you've installed it in. Let's make a virtual environment. Go to the location where you want to make your dbt project. cd Documents/programming/python/ (this is where I play around with code) Create the virtual environment. Don't copy the below code just yet, this is just to explain how the script works python3.10 -m venv kjhakdsjfhfkajsd python3.10 : this part says that you want to use python3.10 to make the virtual environment -m venv : this part means that you want to \"-m\" use a python module called \"venv\". This is the thing that will magically make a virtual environment kjhakdsjfhfkajsd : this is the name of our environment, which is very beautiful. Ok you can copy this thing now python3.10 -m venv .venv This creates a virtual environment inside a hidden folder \".venv\" You can view the folder that's created by typing ls -la in the terminal. This will show all stuff in your current directory including the hidden folders. You don't have to do this inside a hidden folder btw. python3.10 -m venv venv also works nicely. I just prefer to make my virtual envs in hidden folders because vscode sometimes has issues recognizing them when they are in normal folders, but watever you want will work. Activate the virtual environment You've created the virtual environment but you still need to \"activate\" it so you're actually inside it before you do anything else. copy the following if you want source .venv/bin/activate source : this is a command to execute some file, we want to execute the file that \"activates\" our virtual environment .venv : this is the name of your virtual environment (if you named it venv or kjhsdkjfh then change this part) /bin/activate : this is the location of the \"activation\" thing we want to activate with the source command. You should now be inside your virtual environment. /Documents/programming/python >> : before activating the environment (.venv) /Documents/programming/python >> : after activating the environment You can see that you're in your virtual environment by these brackets that appear before your prompt. Or if you've done some fancy stuff to customize your terminal it will show in some other way. In summary: cd <location that you want> python3.10 -m venv <name you want ot call your virtual environment> source <name of virtual environment>/bin/activate Summary for a virtual environment named \".venv\" python3.10 -m venv .venv source .venv/bin/activate Step3: Installing DBT \u00b6 Time to install the bomb We will basically be follwing the tuturial of the official DBT docs Just as you would install a normal python thing with pip install <normal python thing> We will install dbt with pip install dbt wait don't do it just yet Except! pip install dbt doesn't work anymore for some reason and it will explode. Don't do this. Read more about this here: [DBT Documentation] Installing dbt for snowflake \u00b6 Go to your folder location and activate your virtual environment like you just learnt. pip install --upgrade pip pip install dbt-snowflake That was it, you now have dbt ready to go inside the virtual environment. Hooking up dbt to snowflake \u00b6 To succesfully do this you'll need a snowflake account, maybe a trial account if you're just starting out. Create a trial account here and follow the instructions by snowflake Set up snowflake before you fire up dbt \u00b6 You'll need to have some idea of how snowflake works before you start doing this. Check out some of their fundamental trainings. Other than that you'll need some info before you set up the dbt: Information Have this ready at hand before continueing Snowflake account https://<this_value>.snowflakecomputing.com Snowflake username myusername Snowflake password mysupersecretpassword Role Accountadming | Sysadmin | etc.. Database name \"make this one whatever\" Schema Define this one or use the public default Warehouse Name Pick one from snowflake Fire up dbt \u00b6 Alright let's start with the fun stuff, run dbt init to start a project and follow their instructions and fill in the information that you should have gathered above. dbt init Now DBT has a dummy default setting ready to go so to check if the installation worked simply run the follwing. cd <whatever you called your dbt project> dbt run Confirm if this worked \u00b6 Now check snowflake and you should see a new table created called MY_FIRST_DBT_MODEL You did it! If this worked, please let me know! If the tutorial sucked, please let me know as well and I'll make it better Step 4: Next steps: \u00b6 Connect this to a git repo, should be easy enough. If it's not that easy let me know and I'll add that step into this tutorial Good luck!","title":"Install DBT Locally"},{"location":"data_engineering/install_dbt/#install-dbt-locally","text":"Installing DBT locally succesfully isn't that aweful if you understand why it can be so absolutely aweful. At the end of the day it's just a python thing so we will treat it as such and install it as the simple python thing that it is! You need just a few steps to do it succesfully: Install the correct version of python (the version that dbt will work with) Make a virtual environment (whatever that means) Install DBT like you would any other python thing (however you're supposed to do that).","title":"Install DBT locally"},{"location":"data_engineering/install_dbt/#short-overview-if-you-know-what-youre-doing","text":"install pytnon3.10 python3.10 -m venv .venv source .venv/bin/activate pip install dbt-snowflake link it to your snowflake account according to the dbt prompt","title":"Short overview (if you know what you're doing)"},{"location":"data_engineering/install_dbt/#step1-install-the-correct-python-version","text":"It turns out DBT will not work if you use anything other than python3.10 so we'll need to install that first. This is how you do it on mac. Fun fact The B in DBT actually means \"bomb\". If you try to install dbt without taking proper precautions, it will quite litereally explode. One thing you can do is in your terminal to see your current python version is type the following: python3 --version output: >> Python 3.11.0 !!! As you can see above, my current python version is very cool but will cause dbt to explode, no bueno. So we need to install another python version. Get python 3.10.7 from the official python site Navigate to downloads>MacOS Scroll down to the bottom of the screen and find \"python3.10.7\" Or go straight to the python 3.10.7 page Then scroll down to the \"Files\" table and find \"macOS 64-bit universal2 installer\" Download it and launch it. Install python3.10.7 Go to your download folders where you downloaded the python-3.10.7-macos11.pkg file. Double click the thing A screen will pop open where you can click continue a couple of times. Click continue a couple of times until the installation is complete. When it's done a folder might pop up with all of the things you just installed, you can close this. Or not, do whatever you like. Confirm that python 3.10.7 is installed Open a new terminal Let me repeat, open a new terminal, because your old terminal might not see the newly installed things yet. type python3 --version output: >> Python 3.11.0 !!! THE WRONG ONE, WHY!!!?? -- don't worry everything will be ok. Ok if it still shows the wrong python version, don't worry that's completely normal. If it does show the correct version of python then well congratulations. To check that python3.10.7 really really is installed you can specify which python to use to do things. Instead of writing python3, you can also write python3.10. Try that now: python3.10 --version output: Python 3.10.7 -- Succes! Warning If the above didn't work for some reason try to retrace your steps and reinstall python 3.10.7. If it still doesn't work. Contact me, Robert or someone else to help because oh boy you will need it With the correct version of python installed you're now ready for the next step.","title":"Step1: Install the correct python version."},{"location":"data_engineering/install_dbt/#step-2-create-a-virtual-environment","text":"What is a virtual environment even? Whenever you install stuff in python the files are put in \"the environment\". This is just a folder where whatever packages are stored when you install them with pip install numpy for example. When you then write something like import numpy in your python scripts it will know where to look in \"the environment\" for the package that it needs. Now in real life sometimes code can get a bit complicated and package version \"so and so\" will start to break when you try to use it with the newest version \"this one cool package\". Or sometimes you might want to make an app with only a handfull of all of te thousands of packages that you've been installing in your \"environment\". That's where \"virtual environments\" come in. You create an entirely new space in your computer, you step into it and whenever you pip install <some package> it will be installed in an entirely new and entirely fresh \"environment\". And as a bonus, it's really easy to recreate virtual environements with all the necessary packages so they just work, no matter what machine they are on. But that's not needed for today. Now remember that DBT is a bomb? Bombs are especially good to put inside virtual environments. This way when they explode you only have to worry about the few things that are going on inside this isolated \"virtual environment\" that you've installed it in. Let's make a virtual environment. Go to the location where you want to make your dbt project. cd Documents/programming/python/ (this is where I play around with code) Create the virtual environment. Don't copy the below code just yet, this is just to explain how the script works python3.10 -m venv kjhakdsjfhfkajsd python3.10 : this part says that you want to use python3.10 to make the virtual environment -m venv : this part means that you want to \"-m\" use a python module called \"venv\". This is the thing that will magically make a virtual environment kjhakdsjfhfkajsd : this is the name of our environment, which is very beautiful. Ok you can copy this thing now python3.10 -m venv .venv This creates a virtual environment inside a hidden folder \".venv\" You can view the folder that's created by typing ls -la in the terminal. This will show all stuff in your current directory including the hidden folders. You don't have to do this inside a hidden folder btw. python3.10 -m venv venv also works nicely. I just prefer to make my virtual envs in hidden folders because vscode sometimes has issues recognizing them when they are in normal folders, but watever you want will work. Activate the virtual environment You've created the virtual environment but you still need to \"activate\" it so you're actually inside it before you do anything else. copy the following if you want source .venv/bin/activate source : this is a command to execute some file, we want to execute the file that \"activates\" our virtual environment .venv : this is the name of your virtual environment (if you named it venv or kjhsdkjfh then change this part) /bin/activate : this is the location of the \"activation\" thing we want to activate with the source command. You should now be inside your virtual environment. /Documents/programming/python >> : before activating the environment (.venv) /Documents/programming/python >> : after activating the environment You can see that you're in your virtual environment by these brackets that appear before your prompt. Or if you've done some fancy stuff to customize your terminal it will show in some other way. In summary: cd <location that you want> python3.10 -m venv <name you want ot call your virtual environment> source <name of virtual environment>/bin/activate Summary for a virtual environment named \".venv\" python3.10 -m venv .venv source .venv/bin/activate","title":"Step 2: Create a virtual environment"},{"location":"data_engineering/install_dbt/#step3-installing-dbt","text":"Time to install the bomb We will basically be follwing the tuturial of the official DBT docs Just as you would install a normal python thing with pip install <normal python thing> We will install dbt with pip install dbt wait don't do it just yet Except! pip install dbt doesn't work anymore for some reason and it will explode. Don't do this. Read more about this here: [DBT Documentation]","title":"Step3: Installing DBT"},{"location":"data_engineering/install_dbt/#installing-dbt-for-snowflake","text":"Go to your folder location and activate your virtual environment like you just learnt. pip install --upgrade pip pip install dbt-snowflake That was it, you now have dbt ready to go inside the virtual environment.","title":"Installing dbt for snowflake"},{"location":"data_engineering/install_dbt/#hooking-up-dbt-to-snowflake","text":"To succesfully do this you'll need a snowflake account, maybe a trial account if you're just starting out. Create a trial account here and follow the instructions by snowflake","title":"Hooking up dbt to snowflake"},{"location":"data_engineering/install_dbt/#set-up-snowflake-before-you-fire-up-dbt","text":"You'll need to have some idea of how snowflake works before you start doing this. Check out some of their fundamental trainings. Other than that you'll need some info before you set up the dbt: Information Have this ready at hand before continueing Snowflake account https://<this_value>.snowflakecomputing.com Snowflake username myusername Snowflake password mysupersecretpassword Role Accountadming | Sysadmin | etc.. Database name \"make this one whatever\" Schema Define this one or use the public default Warehouse Name Pick one from snowflake","title":"Set up snowflake before you fire up dbt"},{"location":"data_engineering/install_dbt/#fire-up-dbt","text":"Alright let's start with the fun stuff, run dbt init to start a project and follow their instructions and fill in the information that you should have gathered above. dbt init Now DBT has a dummy default setting ready to go so to check if the installation worked simply run the follwing. cd <whatever you called your dbt project> dbt run","title":"Fire up dbt"},{"location":"data_engineering/install_dbt/#confirm-if-this-worked","text":"Now check snowflake and you should see a new table created called MY_FIRST_DBT_MODEL You did it! If this worked, please let me know! If the tutorial sucked, please let me know as well and I'll make it better","title":"Confirm if this worked"},{"location":"data_engineering/install_dbt/#step-4-next-steps","text":"Connect this to a git repo, should be easy enough. If it's not that easy let me know and I'll add that step into this tutorial Good luck!","title":"Step 4: Next steps:"},{"location":"javascript/","text":"Javascript \u00b6 Notes on a Udemy Course String Literals \u00b6 const key = \"hello\" const value = \"hello\" const stringformatted = ` ${ key } : ${ value } `","title":"Javascript"},{"location":"javascript/#javascript","text":"Notes on a Udemy Course","title":"Javascript"},{"location":"javascript/#string-literals","text":"const key = \"hello\" const value = \"hello\" const stringformatted = ` ${ key } : ${ value } `","title":"String Literals"},{"location":"javascript/arrays/","text":"Arrays \u00b6 Filter \u00b6 get certain values out of an array with filter. Filter takes a function thing as inside argument. const myArray = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] myArray . filter ( element => element > 5 ) Spread operator \u00b6 This is a way to get the values of an array inside a new array const arr1 = [ 1 , 2 , 3 , 4 , 5 ] const arr2 = [... arr1 ] cosnt arr3 = [ 1 , 2 , 3 , 4 , ... arr2 ]","title":"Arrays"},{"location":"javascript/arrays/#arrays","text":"","title":"Arrays"},{"location":"javascript/arrays/#filter","text":"get certain values out of an array with filter. Filter takes a function thing as inside argument. const myArray = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] myArray . filter ( element => element > 5 )","title":"Filter"},{"location":"javascript/arrays/#spread-operator","text":"This is a way to get the values of an array inside a new array const arr1 = [ 1 , 2 , 3 , 4 , 5 ] const arr2 = [... arr1 ] cosnt arr3 = [ 1 , 2 , 3 , 4 , ... arr2 ]","title":"Spread operator"},{"location":"javascript/objects/","text":"Objects \u00b6 primitive values reference values -> these are all objects Making objects \u00b6 let person = { name : 'thing' , integer : 20 , listing : [ 1 , 2 , 3 ] greet : function (){ console . log ( \"hello\" ) } } Editing objects \u00b6 // adding person . newThing = 'newvalue' // deleting (setting to undefined) delete person . newThing using undefined never define something as \"undefined\" (bad practice, use \"null\" instead) Special Key names, bracket notation \u00b6 let myObject = { fist name : \"name\" // not allowed first - name : \"name\" // not allowed \"first-name\" : \"name\" // valid! 'first name' : 'name' // valid! } gettingTheValue = person [ \"first-name\" ] gettingTheValue = person [ \"first name\" ] Property types and order \u00b6 let myObject = { 1.5 : 'hello' // valid - 2 : 'hello' // not allowed } value = myObject [ 1.5 ] // this works value = myObject [ '1.5' ] // this works when viewing the properties, the order is kept as we've added them. exception to default ordering When using numbers as keys, they will be sorted, otherwise the original definition order will be kept Dynamic Property Access \u00b6 const keyName = \"firt-name\" value = myObject [ keyName ] // this works value = myObject . keyName // will not work const chosenKeyName = 'level' ; let myObject = { [ chosenKeyName ] : \"badaboom\" // key='level' 'level' : 'badaboom' // same as above } Shorthand property syntax \u00b6 if you havea property name that's the same as the key name (when you use a variable for example), yo can ommit the colon colon syntax. const title = 'thetitle' const myObject = { title : title , //valid title , // also valid! does the same thing } For-in loops \u00b6 const myObject = { a : 1 , b : 2 , c : 3 , d : 4 , } for ( const key in myObject ) { key = key value = myObject [ key ] } Chaining \u00b6 Having multiple dots to reference nested elements in the object. available on objects avaialble on methods as well const id = Math . random (). toString () const nested = myObject . movie . title Spread Operator \u00b6 Just like in arrays, you can use the spread operator to quickly copy over values into new objects. const Object1 = { person : 'max' , age : 30 , profession : 'webdev' , } const Object2 = { ... Object1 // merges all kv pairs into new object } const Object3 = { profession : 'otherprofession' , // overrides profession, ... Object2 } Object.assign() \u00b6 This is another way of copying variables Does the same as the spread operator, can use both. const person1 = {... lots of stuff ...} const person2 = Object . assign ({}, person1 ) // copy properties from exisitng object to new object Object destructuring \u00b6 Similar to array destructuring !!! info 'keys matter' Object desctructuring is nice, but make sure the keys that you try to catch are located inside the object that you are reading from. const { info } = existingObject const { info , ... otherProps } = existingObject console . log ( info ) // info is now an existing thing console . log ( otherProps ) // otherProps is also a thing now //reassigning the variable name const { info : movieTitle } = existingObject console . log ( info ) // will not exist console . log ( movieTitle ) // works! Checking property existance \u00b6 if ( 'key' in myObject ){...} // check if key is there if ( myObject . key === undefined ) // same thing this \u00b6 A special keyword with regards to objects It's the same as self in python const myObject = { title : \"The Movie Title\" getFormattedTitle : function (){ return this . title . toUpperCase () } } sometimes the \"this\" is not referring to the object, but to something else that has called it. You can point it back to the thing you want by using the bind() function inside a function, \"this\" always refers to the think that called it. (so what's in front of the function) const a = getFormattedTitle . bind ( myObject ) // execute on an object const b = getFormattedTitle . call ( myObject , arg1 , arg2 , arg3 ) // call the function const c = getFormattedTitle . apply ( myObject , [ arg1 , arg2 , arg3 ]) debugging this this can sometimes be a bit weird. console.log(this) is a good way to figure out what context it belongs to when it doesn't behave as expected. The reason that it can behave unexpected is because it refers to what is calling the function, this could be the object, but could also be a bigger global scope or an eventlistener for example. method shorthand syntax \u00b6 const myObject = { title : \"The Movie Title\" getFormattedTitle : function (){ return this . title . toUpperCase () } } const myObject = { title : \"The Movie Title\" //same as method above, but shorter getFormattedTitle (){ return this . title . toUpperCase () } } Getters & Setters \u00b6 get = retrieving thing set = assinging thing to customize how the get and set happens, you can use getters and setters. const myObject = { // customise what happens when people try to assign something tot title set title ( value ){ if ( valuel . trim () === '' ){ this . _title = \"DEFAULT VALUE\" } this . _title = value } // customize what happens when people try to retrieve the title. get title (){ return this . _title } } // getter activated const newThing = myObject . title // just get stuff like this //setter activated myObject . title = 3 // just add stuff like normally","title":"Objects"},{"location":"javascript/objects/#objects","text":"primitive values reference values -> these are all objects","title":"Objects"},{"location":"javascript/objects/#making-objects","text":"let person = { name : 'thing' , integer : 20 , listing : [ 1 , 2 , 3 ] greet : function (){ console . log ( \"hello\" ) } }","title":"Making objects"},{"location":"javascript/objects/#editing-objects","text":"// adding person . newThing = 'newvalue' // deleting (setting to undefined) delete person . newThing using undefined never define something as \"undefined\" (bad practice, use \"null\" instead)","title":"Editing objects"},{"location":"javascript/objects/#special-key-names-bracket-notation","text":"let myObject = { fist name : \"name\" // not allowed first - name : \"name\" // not allowed \"first-name\" : \"name\" // valid! 'first name' : 'name' // valid! } gettingTheValue = person [ \"first-name\" ] gettingTheValue = person [ \"first name\" ]","title":"Special Key names, bracket notation"},{"location":"javascript/objects/#property-types-and-order","text":"let myObject = { 1.5 : 'hello' // valid - 2 : 'hello' // not allowed } value = myObject [ 1.5 ] // this works value = myObject [ '1.5' ] // this works when viewing the properties, the order is kept as we've added them. exception to default ordering When using numbers as keys, they will be sorted, otherwise the original definition order will be kept","title":"Property types and order"},{"location":"javascript/objects/#dynamic-property-access","text":"const keyName = \"firt-name\" value = myObject [ keyName ] // this works value = myObject . keyName // will not work const chosenKeyName = 'level' ; let myObject = { [ chosenKeyName ] : \"badaboom\" // key='level' 'level' : 'badaboom' // same as above }","title":"Dynamic Property Access"},{"location":"javascript/objects/#shorthand-property-syntax","text":"if you havea property name that's the same as the key name (when you use a variable for example), yo can ommit the colon colon syntax. const title = 'thetitle' const myObject = { title : title , //valid title , // also valid! does the same thing }","title":"Shorthand property syntax"},{"location":"javascript/objects/#for-in-loops","text":"const myObject = { a : 1 , b : 2 , c : 3 , d : 4 , } for ( const key in myObject ) { key = key value = myObject [ key ] }","title":"For-in loops"},{"location":"javascript/objects/#chaining","text":"Having multiple dots to reference nested elements in the object. available on objects avaialble on methods as well const id = Math . random (). toString () const nested = myObject . movie . title","title":"Chaining"},{"location":"javascript/objects/#spread-operator","text":"Just like in arrays, you can use the spread operator to quickly copy over values into new objects. const Object1 = { person : 'max' , age : 30 , profession : 'webdev' , } const Object2 = { ... Object1 // merges all kv pairs into new object } const Object3 = { profession : 'otherprofession' , // overrides profession, ... Object2 }","title":"Spread Operator"},{"location":"javascript/objects/#objectassign","text":"This is another way of copying variables Does the same as the spread operator, can use both. const person1 = {... lots of stuff ...} const person2 = Object . assign ({}, person1 ) // copy properties from exisitng object to new object","title":"Object.assign()"},{"location":"javascript/objects/#object-destructuring","text":"Similar to array destructuring !!! info 'keys matter' Object desctructuring is nice, but make sure the keys that you try to catch are located inside the object that you are reading from. const { info } = existingObject const { info , ... otherProps } = existingObject console . log ( info ) // info is now an existing thing console . log ( otherProps ) // otherProps is also a thing now //reassigning the variable name const { info : movieTitle } = existingObject console . log ( info ) // will not exist console . log ( movieTitle ) // works!","title":"Object destructuring"},{"location":"javascript/objects/#checking-property-existance","text":"if ( 'key' in myObject ){...} // check if key is there if ( myObject . key === undefined ) // same thing","title":"Checking property existance"},{"location":"javascript/objects/#this","text":"A special keyword with regards to objects It's the same as self in python const myObject = { title : \"The Movie Title\" getFormattedTitle : function (){ return this . title . toUpperCase () } } sometimes the \"this\" is not referring to the object, but to something else that has called it. You can point it back to the thing you want by using the bind() function inside a function, \"this\" always refers to the think that called it. (so what's in front of the function) const a = getFormattedTitle . bind ( myObject ) // execute on an object const b = getFormattedTitle . call ( myObject , arg1 , arg2 , arg3 ) // call the function const c = getFormattedTitle . apply ( myObject , [ arg1 , arg2 , arg3 ]) debugging this this can sometimes be a bit weird. console.log(this) is a good way to figure out what context it belongs to when it doesn't behave as expected. The reason that it can behave unexpected is because it refers to what is calling the function, this could be the object, but could also be a bigger global scope or an eventlistener for example.","title":"this"},{"location":"javascript/objects/#method-shorthand-syntax","text":"const myObject = { title : \"The Movie Title\" getFormattedTitle : function (){ return this . title . toUpperCase () } } const myObject = { title : \"The Movie Title\" //same as method above, but shorter getFormattedTitle (){ return this . title . toUpperCase () } }","title":"method shorthand syntax"},{"location":"javascript/objects/#getters-setters","text":"get = retrieving thing set = assinging thing to customize how the get and set happens, you can use getters and setters. const myObject = { // customise what happens when people try to assign something tot title set title ( value ){ if ( valuel . trim () === '' ){ this . _title = \"DEFAULT VALUE\" } this . _title = value } // customize what happens when people try to retrieve the title. get title (){ return this . _title } } // getter activated const newThing = myObject . title // just get stuff like this //setter activated myObject . title = 3 // just add stuff like normally","title":"Getters &amp; Setters"},{"location":"javascript/strings/","text":"Strings \u00b6 Check if string has a certain value \u00b6 const myString = \"the string that has a thing\" result = myString . includes ( 'thing' )","title":"Strings"},{"location":"javascript/strings/#strings","text":"","title":"Strings"},{"location":"javascript/strings/#check-if-string-has-a-certain-value","text":"const myString = \"the string that has a thing\" result = myString . includes ( 'thing' )","title":"Check if string has a certain value"},{"location":"python/","text":"Python \u00b6 How to learn python \u00b6 Just do it For real, just make stuff. Check below for some good resources Fundamentals \u00b6 Certifications \u00b6 Resources \u00b6","title":"Python"},{"location":"python/#python","text":"","title":"Python"},{"location":"python/#how-to-learn-python","text":"Just do it For real, just make stuff. Check below for some good resources","title":"How to learn python"},{"location":"python/#fundamentals","text":"","title":"Fundamentals"},{"location":"python/#certifications","text":"","title":"Certifications"},{"location":"python/#resources","text":"","title":"Resources"},{"location":"python/fundamentals/","text":"Pyhon Fundamentals \u00b6 Check out the docs, all the basics are here: Python Docs Tutorial","title":"Fundamentals"},{"location":"python/fundamentals/#pyhon-fundamentals","text":"Check out the docs, all the basics are here: Python Docs Tutorial","title":"Pyhon Fundamentals"},{"location":"sql/","text":"SQL \u00b6 <- check out the sidebar","title":"SQL"},{"location":"sql/#sql","text":"<- check out the sidebar","title":"SQL"},{"location":"sql/examples/","text":"Examples \u00b6","title":"Examples"},{"location":"sql/examples/#examples","text":"","title":"Examples"},{"location":"sql/language/","text":"Structured Query Language \u00b6 A short overview of most things that you can do in SQL Language References \u00b6 SQL Syntax Wiki W3 School SQL Snowflake SQL general reference Snowflake SQL command reference Snowflake SQL functions reference Syntax stuff \u00b6 Operators \u00b6 SQL Operators = -- equal to <> -- not equal to > , < , <= , >= -- comparisons BETWEEN -- between a certain range LIKE --search for a certain pattern IN -- specify multiple possible values for a col AND -- and stuff OR --or stuff NOT -- not stuff IS NULL IS NOT NULL Basics \u00b6 Getting stuff out a table SELECT col1 , col2 , col3 , FROM mytab --seleting cols from a table SELECT DISTINCT ... -- unique values SELECT ... FROM ... WHERE ... -- has to be in this order -- filter out stuff based on condition SELECT ... WHERE mycondition SELECT ... WHERE cond1 AND cond2 SELECT ... WHERE cond1 OR cond2 SELECT ... WHERE NOT cond1 --m combining conditions SELECT * FROM mytab WHERE col1 = \"val1\" AND ( col2 = \"val2\" or col2 = \"val3\" ) -- ordering SELECT ... ORDER BY col , ASC | DESC SELECT ... ORDER BY col1 ASC , col2 DESC -- can be done -- nulls SELECT ... WHERE col IS NOT NULL SELECT ... WHERE col IS NULL -- limit selection: n SELECT TOP n col1 , col2 FROM ... WHERE cond1 ; SELECT TOP n PERCENT * FROM col1 ; --- SQL server syntax SELECT ... FROM .. WHERE ... LIMIT n ; --mysql syntax Adding rows to a table INSERT INTO ... INSERT INTO mytab ( co1 , col2 , col3 , ...) VALUES ( val1 , val2 , val3 ,...) Changing values in a table UPDATE mytab SET col1 = val1 , col2 = val2 WHERE cond1 UPDATE mytab SET col1 = val1 -- will change all records, beware Removing values from a table DELETE FROM mytab WHERE cond1 DELETE FROM mytab ; -- deletes all values but keeps table structure, beware Functions \u00b6 SQL Functions SELECT MIN ( col1 ) FROM ... WHERE ...; --smallest value SELECT MAX ( col1 ) FROM ... WHERE ...; --biggest value SELECT COUNT ( col1 ) FROM ... WHERE cond ; -- number of rows matching condition SELECT AVG ( col1 ) FROM ... WHERE ...; -- average value SELECT SUM ( col1 ) FROM ... WHERE ...; -- sum value Pattern matching \u00b6 pattern matching with LIKE SELECT ... FROM ... WHERE col1 LIKE pattern -- patterns LIKE % -- any number of values LIKE _ -- singular wildcard LIKE [ abc ] -- any character in the brackets LIKE [ ! abc ] -- any character NOT in the brackets LIKE [ a - d ] -- any character in this range LIKE # -- numberic character LIKE % pa__ [ ! a - c ][ nm ] % -- crazy pattern IN and BETWEEN Operator SELECT ... FROM ... WHERE col IN ( val1 , val2 ) SELECT ... FROM ... WHERE col IN ( SELECT ...) SELECT ... FROM ... WHERE col BETWEEN val1 AND val2 Aliases \u00b6 SQL Aliases - Columns & Tables -- Alias Columns SELECT col1 AS alias1 , col2 AS col_alias FROM mytab -- Alias Tables SELECT col1 , col2 , col3 FROM mytable AS tab_alias -- check this out SELECT a . col1 , b . col1 , c . col1 FROM tab1 AS a , tab2 AS b , tab3 AS c WHERE a . col = cond AND b . col = cond Abbreviations \u00b6 SQL Structured Query Language RDBMS Relational Database Management System DQL Data Query Language DDL Data Definition Language DCL Data Control Language DML Data Manipulation Language ANSI American National Standards Institute ISO International Organization for Standardization Concepts \u00b6 Types of SQL statements (sublanguages)? DQL DDL DCL DML Which language elements does SQL have? Clause Expressions Predicates Queries Statements Insignificant Whitespaces SQL Language Elements","title":"Language"},{"location":"sql/language/#structured-query-language","text":"A short overview of most things that you can do in SQL","title":"Structured Query Language"},{"location":"sql/language/#language-references","text":"SQL Syntax Wiki W3 School SQL Snowflake SQL general reference Snowflake SQL command reference Snowflake SQL functions reference","title":"Language References"},{"location":"sql/language/#syntax-stuff","text":"","title":"Syntax stuff"},{"location":"sql/language/#operators","text":"SQL Operators = -- equal to <> -- not equal to > , < , <= , >= -- comparisons BETWEEN -- between a certain range LIKE --search for a certain pattern IN -- specify multiple possible values for a col AND -- and stuff OR --or stuff NOT -- not stuff IS NULL IS NOT NULL","title":"Operators"},{"location":"sql/language/#basics","text":"Getting stuff out a table SELECT col1 , col2 , col3 , FROM mytab --seleting cols from a table SELECT DISTINCT ... -- unique values SELECT ... FROM ... WHERE ... -- has to be in this order -- filter out stuff based on condition SELECT ... WHERE mycondition SELECT ... WHERE cond1 AND cond2 SELECT ... WHERE cond1 OR cond2 SELECT ... WHERE NOT cond1 --m combining conditions SELECT * FROM mytab WHERE col1 = \"val1\" AND ( col2 = \"val2\" or col2 = \"val3\" ) -- ordering SELECT ... ORDER BY col , ASC | DESC SELECT ... ORDER BY col1 ASC , col2 DESC -- can be done -- nulls SELECT ... WHERE col IS NOT NULL SELECT ... WHERE col IS NULL -- limit selection: n SELECT TOP n col1 , col2 FROM ... WHERE cond1 ; SELECT TOP n PERCENT * FROM col1 ; --- SQL server syntax SELECT ... FROM .. WHERE ... LIMIT n ; --mysql syntax Adding rows to a table INSERT INTO ... INSERT INTO mytab ( co1 , col2 , col3 , ...) VALUES ( val1 , val2 , val3 ,...) Changing values in a table UPDATE mytab SET col1 = val1 , col2 = val2 WHERE cond1 UPDATE mytab SET col1 = val1 -- will change all records, beware Removing values from a table DELETE FROM mytab WHERE cond1 DELETE FROM mytab ; -- deletes all values but keeps table structure, beware","title":"Basics"},{"location":"sql/language/#functions","text":"SQL Functions SELECT MIN ( col1 ) FROM ... WHERE ...; --smallest value SELECT MAX ( col1 ) FROM ... WHERE ...; --biggest value SELECT COUNT ( col1 ) FROM ... WHERE cond ; -- number of rows matching condition SELECT AVG ( col1 ) FROM ... WHERE ...; -- average value SELECT SUM ( col1 ) FROM ... WHERE ...; -- sum value","title":"Functions"},{"location":"sql/language/#pattern-matching","text":"pattern matching with LIKE SELECT ... FROM ... WHERE col1 LIKE pattern -- patterns LIKE % -- any number of values LIKE _ -- singular wildcard LIKE [ abc ] -- any character in the brackets LIKE [ ! abc ] -- any character NOT in the brackets LIKE [ a - d ] -- any character in this range LIKE # -- numberic character LIKE % pa__ [ ! a - c ][ nm ] % -- crazy pattern IN and BETWEEN Operator SELECT ... FROM ... WHERE col IN ( val1 , val2 ) SELECT ... FROM ... WHERE col IN ( SELECT ...) SELECT ... FROM ... WHERE col BETWEEN val1 AND val2","title":"Pattern matching"},{"location":"sql/language/#aliases","text":"SQL Aliases - Columns & Tables -- Alias Columns SELECT col1 AS alias1 , col2 AS col_alias FROM mytab -- Alias Tables SELECT col1 , col2 , col3 FROM mytable AS tab_alias -- check this out SELECT a . col1 , b . col1 , c . col1 FROM tab1 AS a , tab2 AS b , tab3 AS c WHERE a . col = cond AND b . col = cond","title":"Aliases"},{"location":"sql/language/#abbreviations","text":"SQL Structured Query Language RDBMS Relational Database Management System DQL Data Query Language DDL Data Definition Language DCL Data Control Language DML Data Manipulation Language ANSI American National Standards Institute ISO International Organization for Standardization","title":"Abbreviations"},{"location":"sql/language/#concepts","text":"Types of SQL statements (sublanguages)? DQL DDL DCL DML Which language elements does SQL have? Clause Expressions Predicates Queries Statements Insignificant Whitespaces SQL Language Elements","title":"Concepts"}]}